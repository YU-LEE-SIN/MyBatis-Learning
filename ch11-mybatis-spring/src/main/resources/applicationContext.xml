<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
    <!--相当于让spring读取外部的properties文件
    placeholder:占位符的意思
    spring会读取很多地方的一些属性,比如当前操作系统的环境变量
    jdk设置的属性值等
    所以某些环境可能导致properties文件的内容会被其它覆盖,所以
    建议设置一个local-override=true-->
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties"  local-override="true"/>
    <!--数据源 使用druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>
    <!--SessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--指定mapper文件-->
        <property name="mapperLocations" value="classpath*:mapper/**/*Mapper.xml"/>
        <!--mybatis-config文件解析之后mybatis是用Configuration类型来代表(入口对象)-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <!--配置显示sql的日志-->
                <property name="logImpl" value="org.apache.ibatis.logging.stdout.StdOutImpl"/>
            </bean>
        </property>
    </bean>
    <!--   扫描com.dao下面的所有类依旧com.dao的所有子包下面类,
       扫描会包里面的所有的dao的实现类都创建出来并注册到spring容器中-->
    <mybatis:scan base-package="org.dao"/>

    <!--注入dao-->
    <bean id="empService" class="org.service.impl.EmpServiceImpl" autowire="byType"></bean>
</beans>